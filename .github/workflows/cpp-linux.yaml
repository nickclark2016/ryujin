name: Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cpp-build:
    runs-on: ${{ matrix.os }}
  
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        config: [ debug, release ]

    steps:
      - uses: actions/checkout@v2
      - name: artifacts cache
        id: artifacts-cache
        uses: actions/cache@v2
        with:
          path: bin
          key: ${{ matrix.os }}-${{ matrix.config }}-artifact-cache
      - name: configure libraries
        run: sudo apt-get install -y libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev mesa-common-dev
      - name: configure gcc
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64
      - name: vulkan sdk install
        run: wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add - && sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.211-bionic.list https://packages.lunarg.com/vulkan/1.3.211/lunarg-vulkan-1.3.211-bionic.list && sudo apt-get -y update && sudo apt-get -y install vulkan-sdk
      - name: set up makefile
        run: ./dependencies/premake/premake5 gmake2
      - name: clean
        run: rm -rf bin bin-int && make clean
      - name: build
        run: make config=${{ matrix.config }}_x64 -j$(nproc)